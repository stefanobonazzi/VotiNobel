INPUT:
- Insieme degli esami (ESAMI)	{e1, e2, ..., eN}
- # crediti (m)

OUTPUT:
- sottoinsieme di ESAMI, tale che:
	* Somma ESAMI.crediti == m
	* Media ESAMI.voto sia massima
	
	
	
APPROCCIO 1 (Il più "Studpido")

Ad ogni livello L della ricorsione inserisco un esame in PARZIALE. Devo decidere quale -> li provo tutti.

SOLUZIONE PARZIALE: ad ogni livello L, PARZIALE sarà un sottoinsieme di esattamente L esami.

GENERAZIONE SOTTOPROBLEMI = aggiungere un nuovo esame a parziale, tra quelli che non ho ancora aggiunto
	PARZIALE = PARZIALE + ESAMI(i)
	
L = 0 -> N scelte possibili
	PARZIALE = {e1}
		L = 1
			PARZIALE = {e1, e2}
				L = 2
					PARZIALE = {e1, e2, e3}
						[...]
		L = 1
			PARZIALE = {e1, e3}
				L = 2
					PARZIALE = {e1, e3, e2}
						[...]
			
	PARZIALE = {e2}
		L = 1
			PARZIALE = {e2, e1}		(Dato che l'ordine non conta stiamo esplorando soluzioni già viste)
				L = 2
					PARZIALE = {e2, e1, e3}
					
	[...]
	PARZIALE = {eN}

CASI TERMINALI

1) L = N

2) se PARZIALE.sommaCredit() == m	(Cioè ho già il numero di crediti che mi serve)
	--> Potrebbe essere una soluzione, controllo se è la soluzione migliore
	
	return
   else se PARZIALE.sommaCrediti() > m
    --> Non può essere una soluzione --> esco dalla ricorsione
    
    return
    
    
    
APPROCCIO 2 ("più furbo")	--> complessità 2^N, che è molto meno di N!

Generare i sottoproblemi 1 per volta, scorrendo l'insieme di esami di partenza in ordine, decidendo
per ogni esame:
 * se debba essere inserito
 * se non debba essere inserito
 
 
IL LIVELLO DELLA RICORSIONE == ESAME DA CONSIDERARE

L = 0 -> 2 scelte possibili
	PARZIALE = {e1}	o lo inserisco
		L = 1
			PARZIALE = {e1, e2}
			
			PARZIALE = {e1}
			
	PARZIALE = {} o no
		L = 1
			PARZIALE = {e2}
			
			PARZIALE = {} 